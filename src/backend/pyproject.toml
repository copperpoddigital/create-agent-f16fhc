[tool.poetry]
name = "freight-price-movement-agent"
version = "0.1.0"
description = "Automated system to track, analyze, and report changes in freight charges over specified time periods"
authors = ["Freight Price Movement Team"]
readme = "README.md"
license = "MIT"
repository = "https://github.com/organization/freight-price-movement-agent"
keywords = ["freight", "logistics", "price-analysis", "supply-chain"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Logistics Professionals",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10"
]

[tool.poetry.dependencies]
python = "^3.9"
fastapi = "^0.95.0"  # Web framework for building APIs with automatic OpenAPI documentation
uvicorn = "^0.21.0"  # ASGI server implementation for running the FastAPI application
gunicorn = "^20.1.0"  # WSGI HTTP Server for running the application in production
sqlalchemy = "^1.4.40"  # SQL toolkit and Object-Relational Mapping (ORM) library
alembic = "^1.10.2"  # Database migration tool for SQLAlchemy
psycopg2-binary = "^2.9.5"  # PostgreSQL adapter for Python
pandas = "^1.5.0"  # Data manipulation and analysis library
numpy = "^1.23.0"  # Numerical computing library for array operations
matplotlib = "^3.6.0"  # Plotting library for creating visualizations
pydantic = "^1.10.0"  # Data validation and settings management using Python type annotations
python-dotenv = "^0.21.0"  # Load environment variables from .env files
python-jose = "^3.3.0"  # JavaScript Object Signing and Encryption implementation for JWT
passlib = "^1.7.4"  # Password hashing library
bcrypt = "^4.0.1"  # Modern password hashing for software and servers
python-multipart = "^0.0.6"  # Streaming multipart parser for file uploads
redis = "^4.5.1"  # Redis client for caching and message broker
requests = "^2.28.0"  # HTTP library for API requests
httpx = "^0.23.3"  # Fully featured HTTP client supporting async/await
boto3 = "^1.26.0"  # AWS SDK for Python for S3 storage integration
celery = "^5.2.7"  # Distributed task queue for background processing
flower = "^1.2.0"  # Web-based tool for monitoring Celery tasks
prometheus-client = "^0.16.0"  # Client library for Prometheus monitoring
sentry-sdk = "^1.17.0"  # Error tracking and performance monitoring

[tool.poetry.group.dev.dependencies]
pytest = "^7.3.0"  # Testing framework
pytest-cov = "^4.1.0"  # Coverage reporting for pytest
pytest-mock = "^3.10.0"  # Thin-wrapper around the mock package for pytest
pytest-asyncio = "^0.21.0"  # Pytest support for asyncio
black = "^23.1.0"  # Code formatter
isort = "^5.12.0"  # Import sorter
flake8 = "^6.0.0"  # Code linter
mypy = "^1.1.1"  # Static type checker
pre-commit = "^3.2.0"  # Git hook scripts manager
bandit = "^1.7.5"  # Security linter
safety = "^2.3.5"  # Vulnerability scanner
faker = "^18.3.1"  # Fake data generator for testing
factory-boy = "^3.2.1"  # Test fixtures replacement
freezegun = "^1.2.2"  # Date/time mocking library for testing

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
start = "uvicorn src.backend.app:app --reload"
test = "pytest"
lint = "flake8 src/backend tests"
format = "black src/backend tests && isort src/backend tests"
typecheck = "mypy src/backend"
security = "bandit -r src/backend && safety check"

[tool.poetry.virtualenvs]
create = true
in-project = true

[tool.pytest]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
addopts = "--cov=src/backend --cov-report=term-missing"

[tool.black]
line-length = 88
target-version = ["py39"]
include = '\.(py)$'

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
name: Infrastructure CI

on:
  push:
    branches: [main, develop]
    paths: ['infrastructure/**']
  pull_request:
    branches: [main, develop]
    paths: ['infrastructure/**']

jobs:
  terraform-validate:
    name: Terraform Validate
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      
      - name: Initialize Terraform
        run: |
          cd infrastructure
          terraform init -backend=false
      
      - name: Validate Terraform Configuration
        run: |
          cd infrastructure
          terraform validate
      
      - name: Check Terraform Formatting
        run: |
          cd infrastructure
          terraform fmt -check -recursive

  terraform-security-scan:
    name: Terraform Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0
      
      - name: Install tfsec
        run: |
          curl -L "$(curl -s https://api.github.com/repos/aquasecurity/tfsec/releases/latest | grep -o -E "https://.+?tfsec-linux-amd64" | head -1)" > tfsec
          chmod +x tfsec
          sudo mv tfsec /usr/local/bin/
      
      - name: Run tfsec
        run: |
          cd infrastructure
          tfsec . --format junit > tfsec-results.xml
      
      - name: Install checkov
        run: |
          pip install checkov
      
      - name: Run checkov
        run: |
          cd infrastructure
          checkov -d . --output junitxml > checkov-results.xml
      
      - name: Upload scan results
        uses: actions/upload-artifact@v3
        with:
          name: security-scan-results
          path: |
            infrastructure/tfsec-results.xml
            infrastructure/checkov-results.xml

  terraform-plan:
    name: Terraform Plan
    needs: [terraform-validate, terraform-security-scan]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      
      - name: Cache Terraform plugins and modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.terraform.d/plugin-cache
            infrastructure/.terraform
          key: ${{ runner.os }}-terraform-${{ hashFiles('infrastructure/**/.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-terraform-
      
      - name: Initialize Terraform
        run: |
          cd infrastructure
          mkdir -p ~/.terraform.d/plugin-cache
          echo 'plugin_cache_dir = "~/.terraform.d/plugin-cache"' > ~/.terraformrc
          terraform init -input=false
      
      - name: Generate plan for dev environment
        run: |
          cd infrastructure
          terraform workspace select dev || terraform workspace new dev
          terraform plan -var-file=environments/dev.tfvars -out=tfplan-dev
      
      - name: Generate plan for staging environment
        run: |
          cd infrastructure
          terraform workspace select staging || terraform workspace new staging
          terraform plan -var-file=environments/staging.tfvars -out=tfplan-staging
      
      - name: Upload Terraform plans
        uses: actions/upload-artifact@v3
        with:
          name: terraform-plans
          path: |
            infrastructure/tfplan-dev
            infrastructure/tfplan-staging
          retention-days: 5